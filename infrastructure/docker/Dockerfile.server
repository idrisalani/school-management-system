# Build stage
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY server/package*.json ./

# Install dependencies with dev dependencies for building
RUN npm ci

# Copy source code
COPY server/ .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Set node environment
ENV NODE_ENV=production

# Install production dependencies
COPY server/package*.json ./
RUN npm ci --only=production

# Copy built files from builder stage
COPY --from=builder /app/dist ./dist

# Copy necessary configuration files
COPY server/.env.production ./.env
COPY server/ecosystem.config.js ./

# Install PM2 globally
RUN npm install pm2 -g

# Create directory for logs
RUN mkdir -p /app/logs

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Start the application with PM2
CMD ["pm2-runtime", "start", "ecosystem.config.js"]

# Development stage
FROM node:18-alpine as development

# Set working directory
WORKDIR /app

# Set node environment
ENV NODE_ENV=development

# Copy package files
COPY server/package*.json ./

# Install all dependencies (including dev)
RUN npm install

# Copy source code
COPY server/ .

# Create directory for logs
RUN mkdir -p /app/logs

# Expose development port
EXPOSE 3000

# Start development server
CMD ["npm", "run", "dev"]